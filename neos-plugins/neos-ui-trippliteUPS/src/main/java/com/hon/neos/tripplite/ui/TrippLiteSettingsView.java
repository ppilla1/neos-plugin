/**
 * Developed by Honeywell, 2012
 * Government Purpose Rights
 * For Official Use Only(FOUO) with Terra Harvest program
 * contract # HHM402-10-C-0050
 */
package com.hon.neos.tripplite.ui;

import java.awt.Container;

import javax.swing.Icon;

import com.hon.neos.suit.SettingsView;
import com.hon.neos.tripplite.TrippLiteAsset;
import com.hon.neos.tripplite.TrippLiteSettings;

/**
 *
 * @author Chris Black
 */
public class TrippLiteSettingsView extends javax.swing.JPanel
										  implements SettingsView<TrippLiteAsset>
{
	////////////////////////////////////////////////////////////////////////////
	// Private Fields
	////////////////////////////////////////////////////////////////////////////
	private static final long serialVersionUID = 7238780264949057580L;

   private javax.swing.JLabel hostLabel;
   private javax.swing.JTextField hostTextField;
   private javax.swing.JLabel portLabel;
   private javax.swing.JTextField portTextField;
   private javax.swing.JLabel readCommunityLabel;
   private javax.swing.JTextField readCommunityTextField;
   private javax.swing.JLabel writeCommunityLabel;
   private javax.swing.JTextField writeCommunityTextField;

   private TrippLiteAsset model = null;

	////////////////////////////////////////////////////////////////////////////
	// Constructors
	////////////////////////////////////////////////////////////////////////////
	/** Creates new form AP79xxSettingsView */
    public TrippLiteSettingsView( TrippLiteAsset model )
    {
        initComponents();
        this.model = model;
        setModel( model );
    }

  	////////////////////////////////////////////////////////////////////////////
  	// Public Methods
  	////////////////////////////////////////////////////////////////////////////
 	@Override
	public String getTitle()
	{
		return "TrippLite UPS Settings";
	}

	@Override
	public String getDescription()
	{
		return null;
	}

	@Override
	public Icon getIcon()
	{
		return null;
	}

	@Override
	public Container getView()
	{
		return this;
	}

	@Override
	public void setModel( TrippLiteAsset model )
	{
		this.model = model;
		TrippLiteSettings settings = model.getSettings();
		hostTextField.setText( settings.getHost() );
		portTextField.setText( String.format( "%d", settings.getPort() ) );
		readCommunityTextField.setText( settings.getReadCommunity() );
		writeCommunityTextField.setText( settings.getWriteCommunity() );
	}

	@Override
	public TrippLiteAsset getModel()
	{
		return this.model;
	}

	////////////////////////////////////////////////////////////////////////////
  	// Private Methods
  	////////////////////////////////////////////////////////////////////////////
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    private void initComponents() {

        hostTextField = new javax.swing.JTextField();
        hostLabel = new javax.swing.JLabel();
        portTextField = new javax.swing.JTextField();
        portLabel = new javax.swing.JLabel();
        readCommunityLabel = new javax.swing.JLabel();
        writeCommunityLabel = new javax.swing.JLabel();
        readCommunityTextField = new javax.swing.JTextField();
        writeCommunityTextField = new javax.swing.JTextField();

        hostTextField.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                focusLostHandler(evt);
            }
        });

        hostLabel.setText("Hostname/IP: ");

        portTextField.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                focusLostHandler(evt);
            }
        });

        portLabel.setText("Port: ");

        readCommunityLabel.setText("Read Community: ");

        writeCommunityLabel.setText("Write Community: ");

        readCommunityTextField.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                focusLostHandler(evt);
            }
        });

        writeCommunityTextField.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                focusLostHandler(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(hostLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(hostTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(portLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(portTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                            .addComponent(writeCommunityLabel)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(writeCommunityTextField))
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                            .addComponent(readCommunityLabel)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(readCommunityTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(83, Short.MAX_VALUE))
        );

        layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {hostLabel, readCommunityLabel, writeCommunityLabel});

        layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {hostTextField, readCommunityTextField, writeCommunityTextField});

        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(hostLabel)
                    .addComponent(hostTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(portLabel)
                    .addComponent(portTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(readCommunityLabel)
                    .addComponent(readCommunityTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(writeCommunityLabel)
                    .addComponent(writeCommunityTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(207, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    /**
     * Update the model's settings object when a text field loses focus
     * @param evt the focus-lost event
     */
    private void focusLostHandler(java.awt.event.FocusEvent evt)
    {
   	 Object sourceObject = evt.getSource();
   	 TrippLiteSettings settings = model.getSettings();
   	 if( sourceObject == hostTextField )
   	 {
      	 settings.setHost( hostTextField.getText() );   		 
   	 }
   	 else if( sourceObject == portTextField )
   	 {
   		 int oldPortValue = settings.getPort();
   		 try
   		 {
   			 settings.setPort( Integer.valueOf( portTextField.getText() ) );
   		 }
   		 catch( NumberFormatException ex )
   		 {
   			 // Change back to what it was
   			 portTextField.setText( String.format( "%d", oldPortValue ) );
   		 }
   	 }
   	 else if( sourceObject == readCommunityTextField )
   	 {
   		 settings.setReadCommunity( readCommunityTextField.getText() );
   	 }
   	 else if( sourceObject == writeCommunityTextField )
   	 {
   		 settings.setWriteCommunity( writeCommunityTextField.getText() );
   	 }
    }
}
